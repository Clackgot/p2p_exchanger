version: '3.8'

services:
  api:
    container_name: exchanger_app_dev
    user: root
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ./:/app
      - /app/node_modules
    ports:
      - ${APP_PORT}:${APP_PORT}
    restart: always
    networks:
      - exchanger_network_dev
    depends_on:
      - db
    env_file:
      - .env.dev

  db:
    container_name: exchanger_db_dev
    image: postgres:14
    environment:
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    expose:
      - ${DB_PORT}
    command: -p ${DB_PORT}
    restart: unless-stopped
    volumes:
      - exchanger_db_volume_dev:/var/lib/postgresql/data
    networks:
      - exchanger_network_dev
    env_file:
      - .env.dev

  redis:
    container_name: exchanger_redis_dev
    image: redis:7.2.3
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - exchanger_redis_volume_dev:/data

  pgAdmin:
    container_name: exchanger_db_pgadmin4_dev
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - ${PGADMIN_EXTERNAL_PORT}:${PGADMIN_INTERNAL_PORT}
    attach: false
    networks:
      - exchanger_network_dev
    env_file:
      - .env.dev

volumes:
  exchanger_db_volume_dev:
    name: exchanger_db_volume_dev
  exchanger_redis_volume_dev:
    name: exchanger_redis_volume_dev

networks:
  exchanger_network_dev:
    name: exchanger_network_dev
